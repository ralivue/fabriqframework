Fabriq Framework change log
  - Initiated 05/05/10 for version 0.5

Version 2.1.2 2013-01-27
  - Cleaned up the Fabriq rendering process with FabriqStack
  - Minimized the index.php file
  - Rewrote module execution functionality
  - Replaced fabriqmodules controller with fabriqmodules module to make updating version
    easier for the future

Version 2.1.1 2012-12-30
  - Moved template initializing to FabriqTemplates from index
  - Cleaned up .htaccess file and web.config
  - Moved errors to the pathmap module

Version 2.1.0 2012-12-05
  - Templating is now always required, rendering moved to FabriqTemplate from index.php
  - Creating utility functions and FabriqStack to clean up index.php
  - Added FabriqModelItem class so each item in Model collection can use CRUD functions
  - PathMap::buildPath(), CSS, and JS files output full URL now.

Version 2.0.1 2012-05-28
  - Fixed a big that prevented bug fixes greater than 9 from showing up

Version 2.0 2012-05-28
  - Version 2.0 released!

Version 1.7.1 2012-05-20
  - Removed lingering reference to helper in code
  - Version 2.0 release candidate 2

Version 1.7 2012-05-20
  - Removed the deprecated code
  - Version 2.0 release candidate 1

Version 1.6 2012-05-20
  - Updated to stable version 1.6

Version 1.5.17 2012-05-17
  - Added Fabriq::jquery() for setting the jQuery version
  - Added jQuery versions in the /libs/javascripts/jquery directory sorted by directory
  - Added Fabriq::empty_js_queue() for emptying the JavaScript queue except for the
    the core files and JavaScript

Version 1.5.16 2012-05-16
  - Added ability to have template files use either .tmpl.php or .tpl.php file extensions

Version 1.5.15 2012-05-14
  - Added log out event

Version 1.5.14 2012-05-10
  - Added log in successful event
  - Added user role check that does not do any forwarding

Version 1.5.13 2012-05-07
  - Fixed visibility of functions in Fabriq installer

Version 1.5.12 2012-05-07
  - Added extendability to the install controller for updates

Version 1.5.11 2012-05-06
  - Added extendability to the install controller
  - Added events to users module

Version 1.5.10 2012-05-05
  - Fixed a bug that tried to set roles before the config file exists

Version 1.5.9 2012-04-16
  - Added web.config file. Fabriq should run on IIS now. The URL Rewrite module for IIS
    needs to be installed in order for clean URLs to work.

Version 1.5.8 2012-03-05
  - Fixed a bug that set the install version as always 1.3.5 instead of current version

Version 1.5.7 2012-03-05
  - Fixed bug that prevented FabriqModules::render_now() from being called for the same
    module action more than once

Version 1.5.6 2012-03-03
  - Added the site menus module

Version 1.5.5 2012-03-01
  - Fixed bug in Model that did not let NULL values set properly

Version 1.5.4 2012-03-01
  - Added the fabriqupdates module
  - Fixed bug in fabriq update step 2

Version 1.5.3 2012-02-22
  - Fixed bug in install that got wrong version if multiple updates were installed at
    the same time.

Version 1.5.2 2012-02-21
  - Changed code that used the no longer supported jQuery templates to use Handlebars.js
  - Added the site/application title to the session variables so that multiple instances
    of the framework on the same server don't have the potential to unintentionally share
    session variables

Version 1.5.1 2012-02-20
  - Merged core classes into single core file
  - Merged core module classes into single core file
  - Added warning messages to code that has been deprecated

Version 1.4 2012-02-18
  - Fixed a bug that prevented copying an app to a new location from being installed correctly
  - New stable version

Version 1.3.7 2011-09-16
  - Fixed bug when scanning for modules

Version 1.3.6 2011-09-12
  - Fixed templating initialization to not overwrite template set by PathMap
  - Fixed PathMap class, moved FabriqTemplates include file
  - Fixed Fabriq installer missing tables and not installing the version number
  - Rolled core modules into main project
  - Updated users#myAccount to be able to be loaded with AJAX
  - Fixed bug in fabriqmodules controller for module scanning

Version 1.3.3 2011-06-04
  - Fixing FabriqModules::render_now() function to be able to render custom module views

Version 1.3.2 2011-05-31
  - Fixed a bug in FabriqModules that prevented install from completing properly

Version 1.3.1 2011-04-23
  - Added event handling and trigger to modules
  - Fixed the install template
  - Added Fabriq::empty_css_queue() function to clear out all stylesheets except for the base CSS file.

Version 1.3 2011-03-21
  - Added templating system
  - Added module system
  - Updated database prepare function to check that inputs are in an array and if a single input, to put it into
    an array
  - Added placeholder creators for database class
  - Removed PostgreSQL support for the time being because it was a poor implementation
  - Started the Fabriq UI JavaScript and CSS framework components
  - Moved fabriq.base.css to the core directory
  - Cleaned up structure of the index.php file to reduce the amount of code
  - jQuery is now required for the Framework and the include was moved to index.php
  - Moved the includes for fabriq.js and fabriq.base.css to the index.php
  - Added PIE to the libs directory
  - /app/helpers is now deprecated. Move all functions from custom helper files into their controllers as private
    functions and update references. This functionality will remain until the first release candidate for the
    official 2.0 version
  - Fixed bug in Database::qmarks()
  - Added a new install and update system to make it easier to install the framework and update it. The install
    and update functions make use of the framework functionality. After updating to version 1.3, a user
    assigned the administrator role will be required to run further updates

Version 1.2 2010-10-27
  - Fixed bugs in Model::find()
  - Fixed a bug in Model::fill() that didn't properly display zero count when empty
  - Cleaned up license text
  - Fixed bug in class autoloading function
  - Cleaned up 404 error reporting in index.php

Version 1.1 2010-10-16
  - Added support for PostgreSQL. When setting up a new app, you now have the choice between MySQL (default) and
    PostgreSQL. The Model class has been updated to work with PostgreSQL as well and you can continue to use
    Model::find(), Model::create(), Model::update(), and Model::destroy() the same way for both MySQL and PostgreSQL
    See the Database interface for the common functions between the MySQL and PostgreSQL Database classes.
  - Updated .htaccess so that directory listing is disabled. To re-enable, open the .htaccess file and change the line
       Option -Indexes
    to
       Option +Indexes
  - Added the libs directory for organizing and using external libraries with Fabriq. A local copy of jQuery is now
    stored in the directory /libs/javascript/jquery/ for use.
  - Added core class FabriqLibs for working with external libraries

Version 1.0 2010-10-03
  - Official version 1.0 is released!
  - Action setting in the BaseMapping class was fixed to not accidentally overwrite values passed in through the path

Version 0.12.1 2010-09-26
  - Moved include for /app/helpers/application.helper.php file to be included before PathMap::map_path() is called in index.php

Version 0.12 2010-09-17
  - Removed all deprecated functions from the code
  
Version 0.11 2010-08-29
  - Fixed Database::prepare_select() to set data pulled from the database to the right keys
  - You no longer need to call Fabriq::model('ModelName') to load models. Models will now be automatically
    loaded whenever you instantiate a new copy.
  - Added the static keyword where appropriate
  - NOTE: all deprecated functions are maked with the warning class. Please update your code to remove them.
    The next release of Fabriq will not have deprecated functions in it.
  
Version 0.10 2010-08-08
  - Cleaned up find function in the Model class. If your code uses the old version, your code can be updated
    to call find_old, however, you should update your code to use Database::prepare_select(). find_old in
    the Model class will be removed in version 1.0
  - The find function in the Model class now accepts the string 'all' to select all records from the database
    and insert them into the collection. Please note that for very large collections, it is possible that PHP
    will time out before returning all of the records. Be sure to only use 'all' for small collections.
  - Added fields and fieldsStr functions to the Model class to make it easier to work with the
    Database::prepare_select() function
  - Merged update and updateAt functions in the Model class. updateAt will be removed in version 1.0
  - Merged create and createAt functions in the Model class. createAt will be removed in version 1.0
  - Functions in the Fabriq class that are marked as deprecated will now be removed in version 1.0
  - Added 404 (page not found) and 500 (internal server error) base functions to the framework in the
    errors controller. You can set up your server to point to the proper actions by pointing them to
    http://example.com/404 and http://example.com/500 (replacing http://example.com with your domain).
    This functionality can easily be extended to include other errors as well as custom error codes
    by adding them to the errors controller, creating the proper views, and updating the /app/PathMap.class.php
    file. Please note that when creating new errors, your functions should be named with string values
    rather than numeric values (ex: 404 is the action fourohfour and 500 is the action fiveohoh).

Version 0.9 2010-07-25
  - Added error reporting in the Database class
  - Added the messaging system class
  - Added default message box styles to the base stylesheet
  - Fixed .htaccess file to properly map files called in the /core directory

Version 0.8.2 2010-07-18
  - Fix for install.php script errors

Version 0.8.1 2010-07-17
  - Added fix to deprecated Fabriq::build_path() function

Version 0.8 2010-07-15
  - Changed create and update functions in /core/Model.class.php to do value and type checks for NULL values
  - Moved fabriq.js to /core directory
  - Added /core/Controller.class.php, /core/BaseMapping.class.php, and /app/PathMap.class.php
  - Updated path mapping related functions to use new mapping classes
  
Version 0.7 2010-06-17
  - Changed DOCTYPE in public/404.html and public/500.html
  - Added core/Controller.class.php to add more OOP functionality to Fabriq and future proof future feature ideas
  - Modified path mapping to render given controller and action and then render render_controller and render_action if different

Version 0.6.4 2010-06-16
  - Added createAt() and updateAt() methods to Model class

Version 0.6.3 2010-06-12
  - Added add() method to Model class
  - Changed DOCTYPE in /app/views/layouts/application.view.php
  - Aliased PHP Fabriq::build_path() method in /core/Fabriq.class.php to Fabriq.build_path() in JavaScript fabriq.js file

Version 0.6.2 2010-06-02
  - Fixed bugs left in model class after moving to use stdClass

Version 0.6.1 2010-05-29
  - Removed instances of array_push from core to reduce overhead
  
Version 0.6 2010-05-26
  - Removed /core/Object.class.php in favor of using PHP's stdClass
  - Added the remove() function to /core/Model.class.php to be able to remove items from the collection
  - Updated install.php, index.php, and /core/Database.class.php to make use of the $_FDB['default'] settings
    - /core/Database.class.php was updated to be able to be used for different database connections
  
Version 0.5 2010-05-08
  - Moved from mysql to mysqli PHP extension
  - Added about to use prepared queries for security
  - Moved all functions in /core/Fabriq.function.php to an abstract class in /core/Fabriq.class.php
  - Made all corrections in core files and index.php to reference the Fabriq abstract class
  - Added Fabriq JavaScript functions for working AJAX