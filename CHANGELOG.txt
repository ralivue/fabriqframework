Fabriq Framework change log
  - Initiated 05/05/10 for version 0.5

Version 1.2
  - Fixed bugs in Model::find()
  - Fixed a bug in Model::fill() that didn't properly display zero count when empty
  - Cleaned up license text
  - Fixed bug in class autoloading function
  - Cleaned up 404 error reporting in index.php

Version 1.1
  - Added support for PostgreSQL. When setting up a new app, you now have the choice between MySQL (default) and
    PostgreSQL. The Model class has been updated to work with PostgreSQL as well and you can continue to use
    Model::find(), Model::create(), Model::update(), and Model::destroy() the same way for both MySQL and PostgreSQL
    See the Database interface for the common functions between the MySQL and PostgreSQL Database classes.
  - Updated .htaccess so that directory listing is disabled. To re-enable, open the .htaccess file and change the line
       Option -Indexes
    to
       Option +Indexes
  - Added the libs directory for organizing and using external libraries with Fabriq. A local copy of jQuery is now
    stored in the directory /libs/javascript/jquery/ for use.
  - Added core class FabriqLibs for working with external libraries

Version 1.0 2010-10-03
  - Official version 1.0 is released!
  - Action setting in the BaseMapping class was fixed to not accidentally overwrite values passed in through the path

Version 0.12.1 2010-09-26
  - Moved include for /app/helpers/application.helper.php file to be included before PathMap::map_path() is called in index.php

Version 0.12 2010-09-17
  - Removed all deprecated functions from the code
  
Version 0.11 2010-08-29
  - Fixed Database::prepare_select() to set data pulled from the database to the right keys
  - You no longer need to call Fabriq::model('ModelName') to load models. Models will now be automatically
    loaded whenever you instantiate a new copy.
  - Added the static keyword where appropriate
  - NOTE: all deprecated functions are maked with the warning class. Please update your code to remove them.
    The next release of Fabriq will not have deprecated functions in it.
  
Version 0.10 2010-08-08
  - Cleaned up find function in the Model class. If your code uses the old version, your code can be updated
    to call find_old, however, you should update your code to use Database::prepare_select(). find_old in
    the Model class will be removed in version 1.0
  - The find function in the Model class now accepts the string 'all' to select all records from the database
    and insert them into the collection. Please note that for very large collections, it is possible that PHP
    will time out before returning all of the records. Be sure to only use 'all' for small collections.
  - Added fields and fieldsStr functions to the Model class to make it easier to work with the
    Database::prepare_select() function
  - Merged update and updateAt functions in the Model class. updateAt will be removed in version 1.0
  - Merged create and createAt functions in the Model class. createAt will be removed in version 1.0
  - Functions in the Fabriq class that are marked as deprecated will now be removed in version 1.0
  - Added 404 (page not found) and 500 (internal server error) base functions to the framework in the
    errors controller. You can set up your server to point to the proper actions by pointing them to
    http://example.com/404 and http://example.com/500 (replacing http://example.com with your domain).
    This functionality can easily be extended to include other errors as well as custom error codes
    by adding them to the errors controller, creating the proper views, and updating the /app/PathMap.class.php
    file. Please note that when creating new errors, your functions should be named with string values
    rather than numeric values (ex: 404 is the action fourohfour and 500 is the action fiveohoh).

Version 0.9 2010-07-25
  - Added error reporting in the Database class
  - Added the messaging system class
  - Added default message box styles to the base stylesheet
  - Fixed .htaccess file to properly map files called in the /core directory

Version 0.8.2 2010-07-18
  - Fix for install.php script errors

Version 0.8.1 2010-07-17
  - Added fix to deprecated Fabriq::build_path() function

Version 0.8 2010-07-15
  - Changed create and update functions in /core/Model.class.php to do value and type checks for NULL values
  - Moved fabriq.js to /core directory
  - Added /core/Controller.class.php, /core/BaseMapping.class.php, and /app/PathMap.class.php
  - Updated path mapping related functions to use new mapping classes
  
Version 0.7 2010-06-17
  - Changed DOCTYPE in public/404.html and public/500.html
  - Added core/Controller.class.php to add more OOP functionality to Fabriq and future proof future feature ideas
  - Modified path mapping to render given controller and action and then render render_controller and render_action if different

Version 0.6.4 2010-06-16
  - Added createAt() and updateAt() methods to Model class

Version 0.6.3 2010-06-12
  - Added add() method to Model class
  - Changed DOCTYPE in /app/views/layouts/application.view.php
  - Aliased PHP Fabriq::build_path() method in /core/Fabriq.class.php to Fabriq.build_path() in JavaScript fabriq.js file

Version 0.6.2 2010-06-02
  - Fixed bugs left in model class after moving to use stdClass

Version 0.6.1 2010-05-29
  - Removed instances of array_push from core to reduce overhead
  
Version 0.6 2010-05-26
  - Removed /core/Object.class.php in favor of using PHP's stdClass
  - Added the remove() function to /core/Model.class.php to be able to remove items from the collection
  - Updated install.php, index.php, and /core/Database.class.php to make use of the $_FDB['default'] settings
    - /core/Database.class.php was updated to be able to be used for different database connections
  
Version 0.5 2010-05-08
  - Moved from mysql to mysqli PHP extension
  - Added about to use prepared queries for security
  - Moved all functions in /core/Fabriq.function.php to an abstract class in /core/Fabriq.class.php
  - Made all corrections in core files and index.php to reference the Fabriq abstract class
  - Added Fabriq JavaScript functions for working AJAX